<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>